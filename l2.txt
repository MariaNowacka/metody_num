import numpy as np

# Funkcja eliminacji Gaussa z częściowym wyborem elementu podstawowego
def eliminacja_gaussa_z_wyborem(A, b):
    n = len(b)
    x = np.zeros(n)

    # Eliminacja współczynników
    for k in range(n-1):
        # Wybór elementu podstawowego
        max_index = k + np.argmax(np.abs(A[k:, k]))
        if max_index != k:
            A[[k, max_index]] = A[[max_index, k]]
            b[[k, max_index]] = b[[max_index, k]]

        for i in range(k+1, n):
            factor = A[i, k] / A[k, k]
            A[i, k:] -= factor * A[k, k:]
            b[i] -= factor * b[k]

    # Podstawianie wstecz
    x[n-1] = b[n-1] / A[n-1, n-1]
    for i in range(n-2, -1, -1):
        x[i] = (b[i] - np.dot(A[i, i+1:], x[i+1:])) / A[i, i]

    return x

# Zadanie 4
A4 = np.array([
    [0, 0, 2, 1, 2],
    [0, 1, 0, 2, -1],
    [1, 2, 0, -2, 0],
    [0, 0, 0, -1, 1],
    [0, 1, -1, 1, -1]
], dtype=float)
b4 = np.array([1, 1, -4, -2, -1], dtype=float)

x4 = eliminacja_gaussa_z_wyborem(A4, b4)
print("Zadanie 4 - Rozwiązanie x:", x4)

# Zadanie 5 - interpolacja wielomianowa
punkty = np.array([
    [0, -1],
    [1, 1],
    [3, 3],
    [5, 2],
    [6, -2]
], dtype=float)

# Tworzenie macierzy A i wektora b na podstawie punktów
A5 = np.array([[x**i for i in range(5)] for x, _ in punkty], dtype=float)
b5 = punkty[:, 1]

wspolczynniki = eliminacja_gaussa_z_wyborem(A5, b5)
print("Zadanie 5 - Współczynniki wielomianu:", wspolczynniki)

# Zadanie 6
A6 = np.array([
    [3.50, 2.77, -0.76, 1.80],
    [-1.80, 2.68, 3.44, -0.09],
    [0.27, 5.07, 6.90, 1.61],
    [1.71, 5.45, 2.68, 1.71]
], dtype=float)
b6 = np.array([7.31, 4.23, 13.85, 11.55], dtype=float)

x6 = eliminacja_gaussa_z_wyborem(A6, b6)
det_A6 = np.linalg.det(A6)
Ax6 = np.dot(A6, x6)

print("Zadanie 6 - Rozwiązanie x:", x6)
print("Det(A):", det_A6)
print("Dokładność Ax ≈ b:", Ax6, "≈", b6)

# Zadanie 7
A7 = np.array([
    [10, -2, -1, 2, 3, 1, -4, 7],
    [5, 11, 3, 10, -3, 3, 3, -4],
    [7, 12, 1, 5, 3, -12, 2, 3],
    [8, 7, -2, 1, 3, 2, 2, 4],
    [2, -15, -1, 1, 4, -1, 8, 3],
    [4, 2, 9, 1, 12, -1, 4, 1],
    [-1, 4, -7, -1, 1, 1, -1, -3],
    [-1, 3, 4, 1, 3, -4, 7, 6]
], dtype=float)
b7 = np.array([0, 12, -5, 3, -25, -26, 9, -7], dtype=float)

x7 = eliminacja_gaussa_z_wyborem(A7, b7)
print("Zadanie 7 - Rozwiązanie x:", x7)

# Zadanie 8 - Obliczanie macierzy odwrotnej
A8 = np.array([
    [2, -1, 0, 0, 0, 0],
    [-1, 2, -1, 0, 0, 0],
    [0, -1, 2, -1, 0, 0],
    [0, 0, -1, 2, -1, 0],
    [0, 0, 0, -1, 2, -1],
    [0, 0, 0, 0, -1, 5]
], dtype=float)
I8 = np.eye(A8.shape[0])
A8_inv = np.column_stack([eliminacja_gaussa_z_wyborem(A8.copy(), I8[:, i]) for i in range(I8.shape[1])])

print("Zadanie 8 - Macierz odwrotna A^-1:\n", A8_inv)

# Zadanie 9 - Obliczanie macierzy odwrotnej
A9 = np.array([
    [1, 3, -9, 6, 4],
    [2, -1, 6, 7, 1],
    [3, 2, -3, 15, 5],
    [8, -1, 1, 4, 2],
    [11, 1, -2, 18, 7]
], dtype=float)
I9 = np.eye(A9.shape[0])
A9_inv = np.column_stack([eliminacja_gaussa_z_wyborem(A9.copy(), I9[:, i]) for i in range(I9.shape[1])])

print("Zadanie 9 - Macierz odwrotna A^-1:\n", A9_inv)
